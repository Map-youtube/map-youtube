<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>여행지 및 식당 안내</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjMNd7u5X5jetqbFXJEr-hF-Ku8_oReGI&libraries=places&callback=initMap" async defer></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        #map {
            height: 600px; /* 기본 높이 */
            width: 100%; /* 모바일 환경에서 100%로 채움 */
        }
        #locationButton {
            margin: 10px;
            padding: 10px;
            display: block; /* 기본적으로 모바일에서는 표시 */
        }

        /* 모바일 환경 스타일 */
        @media (max-width: 768px) {
            #map {
                height: 300px; /* 모바일에서 지도 높이 조정 */
            }
        }
        /* PC 환경에서 화면 비율 조정 */
        @media (min-width: 769px) {
            #map {
                width: 100%; /* 지도는 100% */
                height: 600px; /* 고정 높이 */
            }
            #locationButton {
                display: none; /* PC에서는 위치 버튼 숨김 */
            }
        }

        /* 검색창 위치 스타일 */
        .pac-container {
            z-index: 1000;
        }
        #searchInput {
            position: absolute;
            top: 10px;  /* "지도, 위성" 버튼 아래 위치 */
            left: 10px;
            width: 250px;
            z-index: 5; /* 맵 위에 나타나도록 함 */
            padding: 10px;
        }
    </style>
</head>
<body>

    <h1>여행지 및 식당 안내</h1>
    <input id="searchInput" type="text" placeholder="검색어 입력">
    <button id="locationButton">현재 위치 보기</button>
    <div id="map"></div>

    <script>
        let map;
        let userMarker;
        let userCircle;
        let watchId;
        let isTracking = false;
        let firstClick = true;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 12.7882166, lng: 101.135258 },
                zoom: 10,
            });

            const locations = [
                { title: "맛잇다식당", address: "서울군", hours: "1시간", lat: 12.7874027, lng: 101.135227, videoId: "gCWIa4TwcPc" }
            ];

            locations.forEach(location => {
                const marker = new google.maps.Marker({
                    position: { lat: location.lat, lng: location.lng },
                    map: null, // 초기에는 맵에 표시하지 않음
                    title: location.title,
                });

                marker.addListener("click", () => {
                    // 클릭 시 안내창을 표시하는 기능 제거
                    map.panTo(marker.getPosition());
                });
                
                // 줌 레벨에 따라 마커 표시
                map.addListener('zoom_changed', () => {
                    const zoom = map.getZoom();
                    marker.setMap(zoom >= 16 ? map : null); // 줌 레벨이 16 이상일 때만 보이도록 설정
                });
            });

            // 검색창 추가 (Autocomplete)
            const input = document.getElementById("searchInput");
            const autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            autocomplete.addListener('place_changed', () => {
                const place = autocomplete.getPlace();

                if (!place.geometry || !place.geometry.location) {
                    alert("검색 결과가 없습니다.");
                    return;
                }

                // 검색한 위치로 지도 이동
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(16);
                }
            });
        }

        function trackUserLocation() {
            if (navigator.geolocation) {
                watchId = navigator.geolocation.watchPosition(position => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        heading: position.coords.heading || 0
                    };
                    updateUserMarker(pos);

                    if (isTracking && firstClick) {
                        map.panTo(pos);
                        map.setZoom(16);
                        firstClick = false;
                        isTracking = false;
                    } else if (isTracking && !firstClick) {
                        map.panTo(pos);
                        isTracking = false;
                    }
                }, () => {
                    alert("위치 정보를 가져올 수 없습니다.");
                }, {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                alert("브라우저가 위치 서비스를 지원하지 않습니다.");
            }
        }

        function updateUserMarker(position) {
            if (!userMarker) {
                userMarker = new google.maps.Marker({
                    position: { lat: position.lat, lng: position.lng },
                    map: map,
                    title: "현재 위치",
                    icon: {
                        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                        scale: 5,
                        rotation: position.heading,
                        fillColor: "blue",
                        fillOpacity: 0.8,
                        strokeColor: "blue",
                        strokeWeight: 2
                    }
                });
                userCircle = new google.maps.Circle({
                    center: { lat: position.lat, lng: position.lng },
                    radius: 30,
                    strokeColor: "#4A90E2",
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: "#4A90E2",
                    fillOpacity: 0.35,
                    map: map
                });
            } else {
                userMarker.setPosition({ lat: position.lat, lng: position.lng });
                userCircle.setCenter({ lat: position.lat, lng: position.lng });
            }
        }

        document.getElementById("locationButton").addEventListener("click", function() {
            isTracking = true;
            firstClick = true;
            trackUserLocation();
        });
    </script>
</body>
</html>
