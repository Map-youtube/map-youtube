<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>여행지 및 식당 안내</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjMNd7u5X5jetqbFXJEr-hF-Ku8_oReGI&callback=initMap" async defer></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        #map {
            height: 600px; /* 기본 높이 */
            width: 100%; /* 모바일 환경에서 100%로 채움 */
        }
        #locationButton {
            margin: 10px;
            padding: 10px;
            display: block; /* 기본적으로 모바일에서는 표시 */
        }

        /* 모바일 환경 스타일 */
        @media (max-width: 768px) {
            #map {
                height: 300px; /* 모바일에서 지도 높이 조정 */
            }
        }
        /* PC 환경에서 화면 비율 조정 */
        @media (min-width: 769px) {
            #map {
                width: 100%; /* PC 환경에서 지도의 폭을 100%로 설정 */
                height: 600px; /* 고정 높이 */
                float: none; /* 지도를 전체 폭으로 설정 */
            }
            #locationButton {
                display: none; /* PC에서는 위치 버튼 숨김 */
            }
        }
    </style>
</head>
<body>

    <h1>여행지 및 식당 안내</h1>
    <button id="locationButton">현재 위치 보기</button>
    <div id="map"></div>

    <script>
        let map;
        let userMarker;
        let userCircle;
        let watchId;
        let isTracking = false;
        let firstClick = true;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 12.7882166, lng: 101.135258 },
                zoom: 10,
            });

            const locations = [
                { title: "맛잇다식당", lat: 12.7874027, lng: 101.135227 }
            ];

            locations.forEach(location => {
                const marker = new google.maps.Marker({
                    position: { lat: location.lat, lng: location.lng },
                    map: null, // 초기에는 맵에 표시하지 않음
                    title: location.title,
                });

                marker.addListener("click", () => {
                    map.panTo(marker.getPosition());
                });

                // 줌 레벨에 따라 마커 표시
                map.addListener('zoom_changed', () => {
                    const zoom = map.getZoom();
                    marker.setMap(zoom >= 16 ? map : null); // 줌 레벨이 16 이상일 때만 보이도록 설정
                });
            });
        }

        function trackUserLocation() {
            if (navigator.geolocation) {
                watchId = navigator.geolocation.watchPosition(position => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        heading: position.coords.heading || 0
                    };
                    updateUserMarker(pos);

                    if (isTracking) { // "현재 위치 보기" 버튼을 누른 경우
                        if (firstClick) {
                            map.setCenter(pos); // 첫 클릭 시 현재 위치로 이동
                            map.setZoom(16); // 첫 클릭에서만 줌 변경
                            firstClick = false; // 첫 클릭 이후 줌 변경 없음
                        } else {
                            map.setCenter(pos); // 두 번째 이후 클릭 시 줌 변경 없이 현재 위치로 이동
                        }
                        isTracking = false; // 자동 이동 방지
                    }

                }, () => {
                    alert("위치 정보를 가져올 수 없습니다.");
                }, {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                alert("브라우저가 위치 서비스를 지원하지 않습니다.");
            }
        }

        function updateUserMarker(position) {
            if (!userMarker) {
                userMarker = new google.maps.Marker({
                    position: { lat: position.lat, lng: position.lng },
                    map: map,
                    title: "현재 위치",
                    icon: {
                        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                        scale: 5,
                        rotation: position.heading,
                        fillColor: "blue",
                        fillOpacity: 1,
                        strokeWeight: 2
                    }
                });

                userCircle = new google.maps.Circle({
                    center: { lat: position.lat, lng: position.lng },
                    radius: 50,
                    map: map,
                    fillColor: '#ADD8E6',
                    fillOpacity: 0.3,
                    strokeColor: '#1E90FF',
                    strokeOpacity: 0.8,
                    strokeWeight: 2
                });
            } else {
                userMarker.setPosition({ lat: position.lat, lng: position.lng });
                userMarker.setIcon({
                    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                    scale: 5,
                    rotation: position.heading,
                    fillColor: "blue",
                    fillOpacity: 1,
                    strokeWeight: 2
                });

                userCircle.setCenter({ lat: position.lat, lng: position.lng });
            }
        }

        document.getElementById("locationButton").addEventListener("click", function() {
            if (isTracking) {
                // 이미 위치 추적 중이라면, 두 번째 클릭 시 zoomLevel을 고정합니다.
                return;
            }
            isTracking = true;
            firstClick = true;
            trackUserLocation();
        });

    </script>
</body>
</html>
