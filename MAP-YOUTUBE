<!DOCTYPE html>
<html lang="ko">
<head>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-H02NSBHSGZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-H02NSBHSGZ');
</script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Explore cities, nature, and landmarks from various countries on Google Maps through live YouTube videos. Enjoy a world tour from the comfort of your home and discover your next dream destination.">
    <title>Travel from Your home with YouTube LIVE</title>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjMNd7u5X5jetqbFXJEr-hF-Ku8_oReGI"></script>
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.16.9/dist/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@googlemaps/markerclusterer/dist/index.min.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }
        #map {
            height: 90vh;
            width: 100%;
            margin-top: 10vh;
        }
        .info-window {
            width: 100%;
            max-width: 500px;
            padding: 0;
        }
        .info-window h3, .info-window p {
            margin: 0;
        }
        .small-text {
            font-size: 0.9em;
            color: gray;
        }
        .info-window iframe {
            width: 500px;
            height: 300px;
        }
        @media (max-width: 768px) {
            .info-window {
                max-width: 700px;
            }
            .info-window iframe {
                width: 100%;
                height: auto;
                aspect-ratio: 16 / 9;
            }
        }
        @media (max-width: 480px) {
            .info-window {
                max-width: 450px;
            }
            .info-window iframe {
                width: 100%;
                height: auto;
                aspect-ratio: 16 / 9;
            }
        }
        /* 상단 텍스트 스타일 */
        .top-banner {
            position: absolute;
            top: 0;
            width: 100%;
            height: 10vh; /* 배너 높이 원래대로 */
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 10px 0;
            box-sizing: border-box;
        }
        .top-banner a {
            color: white;
            font-size: 2.25em; /* 글자 크기를 1.5배 수준으로 조정 */
            font-weight: bold;
            text-decoration: none;
            cursor: pointer;
        }
        .top-banner .subtitle {
            font-size: 1.2em;
            color: lightgray;
        }
    </style>
</head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N26TKCCC"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
    <div class="top-banner">
        <a href="#" onclick="window.location.reload()">LIVECAM-VOYAGER.COM</a> <!-- 새로고침 기능으로 수정 -->
        <div class="subtitle">Travel from Your home with YOUTUBE LIVE</div>
    </div>
    <div id="map"></div>

<script>
    let map, currentInfoWindow;
    const markers = [];

    function initMap() {
        const isMobile = window.innerWidth <= 768; // 모바일 기기 기준 화면 너비 설정
        const initialZoom = isMobile ? 2 : 3; // 모바일에서는 줌 레벨을 더 축소
        const initialCenter = isMobile ? { lat: 25, lng: 65 } : { lat: 15, lng: 150 };

        map = new google.maps.Map(document.getElementById("map"), {
            center: initialCenter,
            zoom: initialZoom,
        });

        fetch("https://raw.githubusercontent.com/Map-youtube/map-youtube/main/location.xlsx")
            .then(response => response.arrayBuffer())
            .then(data => {
                const workbook = XLSX.read(data, { type: "array" });
                const sheetName = workbook.SheetNames[0];
                const sheet = workbook.Sheets[sheetName];
                const jsonData = XLSX.utils.sheet_to_json(sheet);

                jsonData.forEach(location => {
                    const latLngString = location['latitude, longitude'];
                    const [lat, lng] = latLngString.split(',').map(coord => parseFloat(coord.trim()));
                    const place = location.Location;
                    const city = location.CITY;
                    const country = location.COUNTRY;
                    const category = location.Category || "";
                    const videoID = location['YouTube Link'];
                    const embedURL = `https://www.youtube.com/embed/${videoID}?rel=0&showinfo=0&autoplay=1&mute=1`;
                    const locationDescription = `${place}, ${city}, ${country}`;

                    const marker = new google.maps.Marker({
                        position: { lat, lng },
                        title: locationDescription
                    });

                    const shortInfoWindow = new google.maps.InfoWindow({
                        content: `
                            <div class="info-window">
                                <h3>${place}</h3>
                                <p>${city}, ${country}</p>
                                <p class="small-text">${category}</p>
                            </div>
                        `
                    });

                    const fullInfoWindow = new google.maps.InfoWindow({
                        content: `
                            <div class="info-window">
                                <h3>${locationDescription}</h3>
                                <iframe src="${embedURL}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
                                <p class="small-text">${category}</p>
                            </div>`
                    });

                    marker.addListener("mouseover", () => {
                        shortInfoWindow.open({
                            anchor: marker,
                            map,
                            shouldFocus: false,
                        });
                    });

                    marker.addListener("mouseout", () => {
                        shortInfoWindow.close();
                    });

                    marker.addListener("click", () => {
                        if (currentInfoWindow) {
                            currentInfoWindow.close();
                        }
                        shortInfoWindow.close();
                        fullInfoWindow.open({
                            anchor: marker,
                            map,
                            shouldFocus: false,
                        });
                        currentInfoWindow = fullInfoWindow;
                    });

                    markers.push(marker);
                });

                const markerCluster = new markerClusterer.MarkerClusterer({ map, markers });
                google.maps.event.addListener(markerCluster, 'clusterclick', (cluster) => {
                    const clusterBounds = cluster.getBounds();
                    map.fitBounds(clusterBounds);
                });
            })
            .catch(error => console.error("Error loading the XLSX file:", error));
    }

    window.onload = function() {
        const userLang = navigator.language || navigator.userLanguage;
        document.documentElement.lang = userLang;
        initMap();
    };
</script>

</body> 
</html> 
