<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Guides</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v3.7.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.7.0/mapbox-gl.js"></script>
    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; top: 40px; bottom: 0; width: 100%; }
        #search-bar { position: absolute; top: 10px; left: 10px; z-index: 1; width: 300px; }
        .marker { width: 20px; height: 20px; background-color: red; border-radius: 50%; }
        .marker:hover { cursor: pointer; }
    </style>
</head>
<body>
<div id="search-bar">
    <input type="text" id="location-search" placeholder="위치 검색" style="width: 100%; padding: 5px; font-size: 16px;">
</div>
<div id="map"></div>

<script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2hvb3RpbmdzdGFyMiIsImEiOiJjbTJrZjk4emgwMHNnMmpzZ2N5ZnozdG1oIn0.rW0cfxPZiQOWkItL-UeoFA';
    const map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v9',
        center: [100.5018, 13.7563], // 지도 시작 위치를 방콕으로 설정
        zoom: 12,
        terrain: {
            source: 'mapbox-dem',
            exaggeration: 1.5
        }
    });

    map.addControl(new mapboxgl.NavigationControl());

    map.on('load', () => {
        map.addSource('mapbox-dem', {
            "type": 'raster-dem',
            "url": 'mapbox://mapbox.mapbox-terrain-dem-v1',
            "tileSize": 512,
            "maxzoom": 14
        });

        map.setTerrain({ source: 'mapbox-dem', exaggeration: 1.5 });

        // GeoJSON 데이터 로드
        map.addSource('locations', {
            type: 'geojson',
            data: 'https://raw.githubusercontent.com/Map-youtube/map-youtube/main/map.geojson'
        });

        map.addLayer({
            'id': 'locations-layer',
            'type': 'circle',
            'source': 'locations',
            'paint': {
                'circle-radius': 10,
                'circle-color': 'red'
            }
        });

        map.on('click', 'locations-layer', function (e) {
            const coordinates = e.features[0].geometry.coordinates.slice();
            const { NAME, DESCRIPTION } = e.features[0].properties;

            let descriptionContent = DESCRIPTION;
            if (DESCRIPTION.startsWith('http')) {
                descriptionContent = `<a href="${DESCRIPTION}" target="_blank">${DESCRIPTION}</a>`;
            }

            new mapboxgl.Popup()
                .setLngLat(coordinates)
                .setHTML(`<h3>${NAME}</h3><p>${descriptionContent}</p>`)
                .addTo(map);
        });

        map.on('mouseenter', 'locations-layer', () => {
            map.getCanvas().style.cursor = 'pointer';
        });
        map.on('mouseleave', 'locations-layer', () => {
            map.getCanvas().style.cursor = '';
        });

        // Mapbox Geocoder 추가 (전 세계 위치 검색 가능)
        const geocoder = new MapboxGeocoder({
            accessToken: mapboxgl.accessToken,
            mapboxgl: mapboxgl,
            placeholder: '장소 검색',
            countries: 'th', // 원하는 국가로 제한 가능, 전 세계 검색 가능하려면 제거
            language: 'ko', // 한글로 검색 가능하게 설정
            marker: false, // 선택한 위치에 마커 표시하지 않음
            types: 'poi,place,address' // 검색 가능 유형
        });

        // 검색창 UI 추가
        document.getElementById('search-bar').appendChild(geocoder.onAdd(map));

        // GeoJSON 데이터도 검색에 포함
        const searchInput = document.getElementById('location-search');
        searchInput.addEventListener('input', function() {
            const query = searchInput.value.toLowerCase();

            map.setFilter('locations-layer', [
                'all',
                ['any',
                    ['match', ['get', 'NAME'], [query], true, false],
                    ['match', ['get', 'NAME'], [query.toUpperCase()], true, false],
                    ['match', ['get', 'NAME'], [query.charAt(0).toUpperCase() + query.slice(1)], true, false]
                ]
            ]);
        });

        // 검색 결과에서 선택된 위치로 이동
        geocoder.on('result', function (e) {
            const { center } = e.result;
            map.flyTo({
                center: center,
                zoom: 14
            });
        });
    });
</script>

</body>
</html>
