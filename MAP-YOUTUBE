<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>여행지 및 식당 안내</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjMNd7u5X5jetqbFXJEr-hF-Ku8_oReGI&callback=initMap" async defer></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }
        #map {
            height: 600px;
            width: 100%;
        }
        #infoPanel {
            background: white;
            border-top: 1px solid #ccc;
            padding: 10px;
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 100;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.3);
        }
        #locationButton {
            margin: 10px;
            padding: 10px;
        }
        .popup-close-btn {
            margin-top: 10px;
            padding: 5px;
            background-color: #f44336;
            color: white;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <h1>여행지 및 식당 안내</h1>
    <button id="locationButton">현재 위치 보기</button>
    <div id="map"></div>
    <div id="infoPanel">
        <h3 id="placeTitle">장소 정보</h3>
        <iframe id="placeVideo" width="280" height="157" frameborder="0" allowfullscreen></iframe>
        <button class="popup-close-btn" onclick="closeInfoPanel()">닫기</button>
    </div>

    <script>
        let map;
        let userMarker;
        let userCircle;
        const visibilityZoomLevel = 16; // 핀이 보일 최소 확대 수준 (더 높은 수준으로 조정)

        function initMap() {
            // 맵 초기화
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 12.7882166, lng: 101.135258 }, // 라용 중심
                zoom: 10,
            });

            // 마커를 추가할 위치 (여행지 또는 식당)
            const locations = [
                { title: "맛집 ㅊ", lat: 12.7874027, lng: 101.135227, videoId: "a1BcD2EfGHQ" }
            ];

            // 위치에 대한 마커 생성 및 확대 수준에 따른 마커 표시
            locations.forEach(location => {
                const marker = new google.maps.Marker({
                    position: { lat: location.lat, lng: location.lng },
                    map: map,
                    title: location.title,
                });

                // 클릭 이벤트 리스너 추가
                marker.addListener("click", () => {
                    showInfoPanel(location.title, location.videoId);
                });

                // 지도 확대/축소 이벤트 감지 및 마커 표시/숨기기
                map.addListener('zoom_changed', function() {
                    marker.setMap(map.getZoom() >= visibilityZoomLevel ? map : null);
                });
            });
        }

        // 사용자 현재 위치에 마커 및 진행 방향 표시
        function setUserMarker(position) {
            if (userMarker) {
                userMarker.setMap(null); // 기존 핀 제거
            }
            // 현재 위치를 나타내는 파란색 마커
            userMarker = new google.maps.Marker({
                position: { lat: position.lat, lng: position.lng },
                map: map,
                title: "현재 위치",
                icon: {
                    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                    scale: 5,
                    rotation: position.heading,
                    fillColor: "blue",
                    fillOpacity: 1,
                    strokeWeight: 2
                }
            });

            // 현재 위치 주변에 원 추가 (예: 정확도 범위)
            if (userCircle) {
                userCircle.setMap(null); // 기존 원 제거
            }
            userCircle = new google.maps.Circle({
                center: { lat: position.lat, lng: position.lng },
                radius: 50, // 정확도 범위 (예시)
                map: map,
                fillColor: '#ADD8E6',
                fillOpacity: 0.3,
                strokeColor: '#1E90FF',
                strokeOpacity: 0.8,
                strokeWeight: 2
            });
        }

        // 정보 패널 표시 함수
        function showInfoPanel(title, videoId) {
            const infoPanel = document.getElementById("infoPanel");
            document.getElementById("placeTitle").innerText = title;
            document.getElementById("placeVideo").src = `https://www.youtube.com/embed/${videoId}`;
            infoPanel.style.display = 'block';
        }

        // 정보 패널 닫기 함수
        function closeInfoPanel() {
            const infoPanel = document.getElementById("infoPanel");
            infoPanel.style.display = 'none';
            document.getElementById("placeVideo").src = ''; // 비디오 초기화
        }

        // 현재 위치 추적 함수 (실시간 트래킹)
        function getLocationAndTrack() {
            if (navigator.geolocation) {
                navigator.geolocation.watchPosition(position => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        heading: position.coords.heading || 0 // 진행 방향 (heading)
                    };
                    setUserMarker(pos);
                }, () => {
                    handleLocationError(true);
                }, {
                    enableHighAccuracy: true, // 높은 정확도 사용
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                handleLocationError(false);
            }
        }

        // 에러 처리 함수
        function handleLocationError(browserHasGeolocation) {
            const infoWindow = new google.maps.InfoWindow();
            infoWindow.setPosition(map.getCenter());
            infoWindow.setContent(browserHasGeolocation ? 
                                   "Error: The Geolocation service failed." : 
                                   "Error: Your browser doesn't support geolocation.");
            infoWindow.open(map);
        }

        // 버튼 클릭 시 현재 위치로 이동 (한 번만 실행됨, 실시간 트래킹은 계속)
        document.getElementById("locationButton").addEventListener("click", () => {
            getLocationAndTrack();
            navigator.geolocation.getCurrentPosition(position => {
                const pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                map.setCenter(pos); // 현재 위치로 이동
                map.setZoom(15); // 지도를 확대
           });
        });

        window.onload = initMap; // 페이지 로드 시 맵 초기화
    </script>
</body>
</html>
