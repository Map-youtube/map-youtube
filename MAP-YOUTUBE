<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>여행지 및 식당 안내3</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjMNd7u5X5jetqbFXJEr-hF-Ku8_oReGI&libraries=places&callback=initMap" async defer></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        #map {
            height: 600px; /* 기본 높이 */
            width: 100%; /* 모바일 환경에서 100%로 채움 */
        }
        #locationButton {
            margin: 10px;
            padding: 10px;
            display: block; /* 기본적으로 모바일에서는 표시 */
        }
        .info-box {
            position: absolute;
            bottom: 10px; /* 기본 위치 */
            left: 10px;
            width: calc(100% - 20px); /* 모바일 환경에서 기본 너비 */
            background: white;
            padding: 10px;
            border-radius: 5px;
            box-shadow: none; /* 그림자 효과 제거 */
            display: none; /* 초기에는 숨김 */
        }
        #youtubeEmbed {
            width: 100%;
            position: relative;
            padding-bottom: 56.25%; /* 16:9 비율을 유지하기 위한 비율 */
            height: 0;
            overflow: hidden;
        }
        #youtubeEmbed iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%; /* 전체 화면이 보이도록 설정 */
        }
        #searchInput {
            width: 90%; /* 검색창 너비 */
            margin: 10px; /* 여백 */
            padding: 10px; /* 내부 여백 */
            border: 1px solid #ccc; /* 테두리 스타일 */
            border-radius: 5px; /* 모서리 둥글게 */
        }

        /* 모바일 환경 스타일 */
        @media (max-width: 768px) {
            #map {
                height: 300px; /* 모바일에서 지도 높이 조정 */
            }
            .info-box {
                bottom: 5px; /* 모바일에서 안내창 위치 조정 */
            }
        }
        /* PC 환경에서 화면 비율 조정 */
        @media (min-width: 769px) {
            #map {
                width: 60%; /* PC 환경에서 지도는 60% */
                height: 600px; /* 고정 높이 */
                float: left; /* 지도 왼쪽 배치 */
            }
            .info-box {
                position: static; /* 절대 위치 해제 */
                width: 40%; /* 안내창을 40%로 설정 */
                float: left; /* 안내창을 지도 오른쪽에 배치 */
                height: 600px; /* 지도와 같은 높이로 맞춤 */
                overflow-y: auto; /* 내용이 넘칠 경우 스크롤 */
                box-sizing: border-box; /* 패딩과 폭을 제대로 계산 */
            }
            #locationButton {
                display: none; /* PC에서는 위치 버튼 숨김 */
            }
        }
    </style>
</head>
<body>

    <h1>여행지 및 식당 안내</h1>
    <input id="searchInput" type="text" placeholder="장소 검색..." />
    <button id="locationButton">현재 위치 보기</button>
    <div id="map"></div>
    <div class="info-box" id="infoBox">
        <h3 id="storeName"></h3>
        <p>가게주소 : <span id="storeAddress"></span></p>
        <p>영업시간 : <span id="storeHours"></span></p>
        <p>YouTube Link : <a href="#" id="youtubeLink" target="_blank">링크 보기</a></p>
        <div id="youtubeEmbed" style="display:none;">
            <iframe src="" frameborder="0" allowfullscreen></iframe>
        </div>
    </div>

    <script>
        let map;
        let userMarker;
        let userCircle;
        let watchId;
        let isTracking = false;
        let firstClick = true;
        let autocomplete;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 12.7882166, lng: 101.135258 },
                zoom: 10,
            });

            // 검색 입력창 자동 완성 설정
            const input = document.getElementById("searchInput");
            autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo("bounds", map);

            // 자동 완성 결과 클릭 시 처리
            autocomplete.addListener("place_changed", () => {
                const place = autocomplete.getPlace();
                if (place.geometry) {
                    map.setCenter(place.geometry.location);
                    map.setZoom(15); // 확대하여 해당 장소 보기
                } else {
                    document.getElementById("searchInput").placeholder = "장소를 찾을 수 없습니다.";
                }
            });

            // GEOJSON 데이터 불러오기
            fetch('https://raw.githubusercontent.com/Map-youtube/map-youtube/main/map.geojson')
                .then(response => response.json())
                .then(data => {
                    // GEOJSON을 지도에 추가
                    map.data.addGeoJson(data);

                    // 각 피처에 클릭 이벤트 추가
                    map.data.addListener('click', (event) => {
                        const location = {
                            title: event.feature.getProperty('title'),
                            address: event.feature.getProperty('address'),
                            hours: event.feature.getProperty('hours'),
                            videoId: event.feature.getProperty('videoId'),
                        };
                        showInfoBox(location);
                        map.panTo(event.latLng);
                    });
                })
                .catch(error => {
                    console.error('GEOJSON 데이터 로드 실패:', error);
                });

            const locations = [
                { title: "맛잇다식당", address: "서울군", hours: "1시간", lat: 12.7874027, lng: 101.135227, videoId: "gCWIa4TwcPc" }
            ];

            locations.forEach(location => {
                const marker = new google.maps.Marker({
                    position: { lat: location.lat, lng: location.lng },
                    map: null, // 초기에는 맵에 표시하지 않음
                    title: location.title,
                });

                marker.addListener("click", () => {
                    showInfoBox(location);
                    map.panTo(marker.getPosition());
                });
                
                // 줌 레벨에 따라 마커 표시
                map.addListener('zoom_changed', () => {
                    const zoom = map.getZoom();
                    marker.setMap(zoom >= 16 ? map : null); // 줌 레벨이 16 이상일 때만 보이도록 설정
                });
            });

            document.getElementById("youtubeLink").addEventListener("click", function(event) {
                event.preventDefault(); // 기본 링크 동작 방지
                const videoId = locations[0].videoId;
                const videoLink = `https://www.youtube.com/embed/${videoId}`;
                
                if (window.innerWidth <= 768) {
                    // 모바일 환경에서 자동 스크롤 및 영상 표시
                    document.getElementById("youtubeEmbed").style.display = 'block';
                    document.querySelector("#youtubeEmbed iframe").src = videoLink;
                    window.scrollTo(0, document.body.scrollHeight); // 페이지 아래로 스크롤
                } else {
                    // PC 환경에서 영상 표시
                    document.getElementById("youtubeEmbed").style.display = 'block';
                    document.querySelector("#youtubeEmbed iframe").src = videoLink;
                }
            });
        }

        function trackUserLocation() {
            if (navigator.geolocation) {
                watchId = navigator.geolocation.watchPosition(position => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        heading: position.coords.heading || 0
                    };
                    updateUserMarker(pos);

                    if (isTracking && firstClick) {
                        map.panTo(pos);
                        map.setZoom(16);
                        firstClick = false;
                        isTracking = false;
                    } else if (isTracking && !firstClick) {
                        map.panTo(pos);
                        isTracking = false;
                    }
                }, () => {
                    alert("위치 정보를 가져올 수 없습니다.");
                }, {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                alert("브라우저가 위치 서비스를 지원하지 않습니다.");
            }
        }

        function updateUserMarker(position) {
            if (!userMarker) {
                userMarker = new google.maps.Marker({
                    position: { lat: position.lat, lng: position.lng },
                    map: map,
                    title: "현재 위치",
                    icon: {
                        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                        scale: 5,
                        rotation: position.heading,
                        fillColor: "blue",
                        fillOpacity: 1,
                        strokeWeight: 2
                    }
                });

                userCircle = new google.maps.Circle({
                    center: { lat: position.lat, lng: position.lng },
                    radius: 50,
                    map: map,
                    fillColor: '#ADD8E6',
                    fillOpacity: 0.3,
                    strokeColor: '#1E90FF',
                    strokeOpacity: 0.8,
                    strokeWeight: 2
                });
            } else {
                userMarker.setPosition({ lat: position.lat, lng: position.lng });
                userMarker.setIcon({
                    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                    scale: 5,
                    rotation: position.heading,
                    fillColor: "blue",
                    fillOpacity: 1,
                    strokeWeight: 2
                });

                userCircle.setCenter({ lat: position.lat, lng: position.lng });
            }
        }

        function showInfoBox(location) {
            document.getElementById("storeName").textContent = location.title;
            document.getElementById("storeAddress").textContent = location.address;
            document.getElementById("storeHours").textContent = location.hours;

            document.getElementById("infoBox").style.display = 'block';
            
            // YouTube 링크를 클릭하면 영상 보이기
            const videoLink = `https://www.youtube.com/embed/${location.videoId}`;
            document.querySelector("#youtubeEmbed iframe").src = videoLink;

            // 영상 표시
            document.getElementById("youtubeEmbed").style.display = 'block';
        }

        document.getElementById("locationButton").addEventListener("click", function() {
            isTracking = true;
            firstClick = true;
            trackUserLocation();
        });
    </script>
</body>
</html>
